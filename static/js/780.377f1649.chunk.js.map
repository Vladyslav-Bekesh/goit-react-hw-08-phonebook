{"version":3,"file":"static/js/780.377f1649.chunk.js","mappings":"+RAGaA,EAAUC,EAAAA,EAAAA,KAAH,yOAcPC,EAAiBD,EAAAA,EAAAA,OAAH,gpBAoCdE,EAAeF,EAAAA,EAAAA,MAAH,wNAKrBG,EAAAA,EAAAA,OAGAA,EAAAA,EAAAA,OAGAA,EAAAA,EAAAA,SAKSC,EAAeJ,EAAAA,EAAAA,MAAH,0aAmBrBG,EAAAA,EAAAA,OAGAA,EAAAA,EAAAA,O,6ICjFSE,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAcMC,EAAY,WAChBL,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EASD,OACE,UAAC,KAAD,CAASE,SA1BU,SAAAC,GACnBA,EAAEC,iBACFZ,GACEa,EAAAA,EAAAA,IAAS,CACPV,KAAMA,EACNE,MAAOA,EACPE,SAAUA,KAGdE,GACD,EAgBkCK,aAAa,MAA9C,WACE,UAAC,KAAD,uBAEE,SAAC,KAAD,CACEC,KAAK,OACLZ,KAAK,OACLa,MAAOb,EACPc,SAAU,SAAAN,GAAC,OAAIP,EAAQO,EAAEO,OAAOF,MAArB,QAGf,UAAC,KAAD,oBAEE,SAAC,KAAD,CACED,KAAK,QACLZ,KAAK,QACLa,MAAOX,EACPY,SAAU,SAAAN,GAAC,OAAIL,EAASK,EAAEO,OAAOF,MAAtB,QAGf,UAAC,KAAD,uBAEE,SAAC,KAAD,CACED,KAAK,WACLZ,KAAK,WACLa,MAAOT,EACPU,SAAU,SAAAN,GAAC,OAAIH,EAAYG,EAAEO,OAAOF,MAAzB,QAGf,SAAC,KAAD,CAAgBD,KAAK,SAASI,SAnCnB,KAAThB,GAAyB,KAAVE,GAA6B,KAAbE,EAmCjC,wBAKL,ECxEc,SAASa,IACtB,OACE,4BACE,SAACC,EAAA,EAAD,WACE,+CAEF,SAACtB,EAAD,MAGL,C","sources":["components/Forms/Forms.styled.jsx","components/Forms/RegisterForm.jsx","pages/Register/Register.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport queries from '../../utils/mediaQueries';\n\nexport const FormCss = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  color: white;\n\n  overflow: hidden;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 12px;\n`;\n\nexport const RegisterBtnCss = styled.button`\n  display: inline-block;\n  padding: 10px 8px;\n  border: 0;\n  border-radius: 15px;\n  min-width: 120px;\n\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  cursor: pointer;\n  outline: none;\n  background-color: #f87719;\n  color: white;\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: default;\n\n    background-color: #444444;\n  }\n\n  &:enabled {\n    opacity: 1;\n  }\n\n  &:not(:disabled):hover {\n    background-color: orangered;\n    transform: scale(1.1);\n  }\n`;\n\nexport const FormLabelCss = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 12px;\n  ${queries.mobile} {\n    width: 479px;\n  }\n  ${queries.tablet} {\n    width: 768px;\n  }\n  ${queries.desktop} {\n    width: 1024px;\n  }\n`;\n\nexport const FormInputCss = styled.input`\n  color: white;\n  background-color: inherit;\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: #f87719 1px solid;\n  border-radius: 15px;\n  outline: none;\n  padding: 8px 10px;\n  margin-top: 8px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n    text-align: center;\n  }\n\n  ${queries.mobile} {\n    width: 480px;\n  }\n  ${queries.tablet} {\n    width: 570px;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/AuthOperations';\nimport {\n  FormCss,\n  RegisterBtnCss,\n  FormLabelCss,\n  FormInputCss,\n} from './Forms.styled';\nimport { useState } from 'react';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(\n      register({\n        name: name,\n        email: email,\n        password: password,\n      })\n    );\n    formReset();\n  };\n\n  const formReset = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  const chekButtonActive = () => {\n    if (name === '' || email === '' || password === '') {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <FormCss onSubmit={handleSubmit} autoComplete=\"off\">\n      <FormLabelCss>\n        Username\n        <FormInputCss\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n        />\n      </FormLabelCss>\n      <FormLabelCss>\n        Email\n        <FormInputCss\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n        />\n      </FormLabelCss>\n      <FormLabelCss>\n        Password\n        <FormInputCss\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n        />\n      </FormLabelCss>\n      <RegisterBtnCss type=\"submit\" disabled={chekButtonActive()}>\n        Register\n      </RegisterBtnCss>\n    </FormCss>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/Forms/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["FormCss","styled","RegisterBtnCss","FormLabelCss","queries","FormInputCss","RegisterForm","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","formReset","onSubmit","e","preventDefault","register","autoComplete","type","value","onChange","target","disabled","Register","Helmet"],"sourceRoot":""}